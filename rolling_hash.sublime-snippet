<snippet>
  <content><![CDATA[
ll b1,b2;
vector<ll> pb1(maxn),pb2(maxn);
vector<ll> inv1(maxn),inv2(maxn);
const int32_t M=1e9+7;
const int32_t MM=998244353; 

ll fpm(ll x,ll y,ll mod){
    ll res=1;
    while(y>0){
        if(y&1LL){
            res=(res*x)%mod;
        }
        y=y>>1LL;
        x=(x*x)%mod;
    }
    return (res%mod);
}

struct hsh{
    ll n;
    vector<ll> v1,v2;
    hsh(string &s){
        n=s.size();
        v1.resize(n);
        v2.resize(n);
        v1[0]=(s[0]-'a'+1);
        v2[0]=(s[0]-'a'+1);
        for(ll i=1;i<n;i++){
            v1[i]=(v1[i-1]+((s[i]-'a'+1)*pb1[i])%M)%M;
            v2[i]=(v2[i-1]+((s[i]-'a'+1)*pb2[i])%MM)%MM;
        }
    }
    pair<ll, ll> sub(ll l,ll r){
        ll h1=v1[r];
        if(l-1>=0){
            h1=(h1-v1[l-1]+M)%M;
        }
        h1*=inv1[l];
        h1%=M;
        
        ll h2=v2[r];
        if(l-1>=0){
            h2=(h2-v2[l-1]+MM)%MM;
        }
        h2*=inv2[l];
        h2%=MM;
        return {h1,h2};
    }
};

b1 = 31; 
b2 = 29;
pb1[0] = pb2[0] = 1;
inv1[0]=inv2[0]=1;
for(ll i=1;i<maxn;i++){
    pb1[i] = pb1[i-1] * 1ll * b1 % M;
    pb2[i] = pb2[i-1] * 1ll * b2 % MM;
    inv1[i]=fpm(pb1[i],M-2,M);
    inv2[i]=fpm(pb2[i],MM-2,MM);
}
]]></content>
  <tabTrigger>rolling_hash</tabTrigger>
  <description>Rolling_Hash</description>
  <!-- Optional: Set a scope to limit where the snippet will trigger -->
  <!-- <scope >source.python</scope > -->
</snippet>
